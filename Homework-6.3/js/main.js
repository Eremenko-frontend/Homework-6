function isPrime(o){var e,l,n;if(o>2&&o%2==0)console.log("false");else if(0!=o&&o%2==0)console.log("true");else if(1==o)console.log("false");else if(2==o)console.log("true");else{for(l=Math.sqrt(o),n=Math.round(l),e=!1,i=2;i<n+1;i++)o%i==0&&(console.log("false"),e=!0);0==e&&0!=o?console.log("true"):console.log("false")}}function factorial(o){var e=1;if(0===o||1===o)console.log(1);else{for(var l=1;l<=o;l++)e*=l;console.log(e)}}function fib(o){if(myArray=[],myArray[0]=0,myArray[1]=1,o>2)for(i=2;i<=o;i++)myArray[i]=myArray[i-1]+myArray[i-2];console.log(myArray[o])}function isSorted(o){for(var e=0,l=0;l<o.length;l++)for(l=1;l<o.length;l++)o[l-1]<=o[l]&&e++;e==o.length-1||0==o.length?console.log("true"):console.log("false")}function myReverse(o){var e,l="";if(0===o.length)l="''";else for(e=o.length-1;e>=0;e--)l+=o.charAt(e);console.log(l)}function indexOf(o,e){var l,i;for(l=0;l<o.length;l++){if(o[l]===e){i=l;break}i=-1}console.log(i)}function isPalindrome(o){var e,l=o.replace(/\s/g,"").toLowerCase(),i="";if(0===l.length)i="''";else for(e=o.length-1;e>=0;e--)i+=l.charAt(e);i===l?console.log(!0):""===l?console.log(!0):console.log(!1)}function missing(o){for(var e=[],l=0;l<o.length;l++){var i=o[l];e[i]=i}e[0]=0;var n,s;for(n=1;n<e.length;n++)void 0===e[n]&&(s=n);console.log(s)}function isBalanced(o){var e=0,l=0,i=0,n=0,s=[];string=o.split(" ");for(var r=0;r<string.length;r++)s.push(string[r]),r!=string.length-1&&s.push(" ");for(var a=0;a<s.length;a++)"{"===s[a]?e+=1:"}"===s[a]?l+=1:" "===s[a]?i+=1:"{"==s[a]&&"}"==s[a]&&" "==s[a]||(n+=1);e===l&&0!=i&&0!=n?console.log(!0):console.log(!1)}console.log("-------------Prime number----------"),isPrime(0),isPrime(1),isPrime(17),isPrime(1e13),console.log("---------------Factorial------------"),factorial(0),factorial(1),factorial(6),console.log("---------------Fibonacci------------"),fib(0),fib(1),fib(10),fib(20),console.log("---------------isSorted------------"),isSorted([]),isSorted([-1/0,-5,0,3,9]),isSorted([3,9,-3,10]),console.log("---------------reverse------------"),myReverse(""),myReverse("abcdef"),console.log("---------------indexOf------------"),indexOf([1,2,3],1),indexOf([1,2,3],4),console.log("---------------isPalindrome------------"),isPalindrome(""),isPalindrome("abcdcba"),isPalindrome("abcd"),isPalindrome("A man a plan a canal Panama"),console.log("---------------missing------------"),missing([]),missing([1,4,3]),missing([2,3,4]),missing([5,1,4,2]),missing([1,2,3,4]),console.log("---------------isBalanced------------"),isBalanced("}{"),isBalanced("{{}"),isBalanced("{}{}"),isBalanced("foo { bar { baz } boo }"),isBalanced("foo { bar { baz }"),isBalanced("foo { bar } }");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
